#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

export HISTCONTROL=ignoreboth
export HISTSIZE=1000
export HISTFILESIZE=10000
export HISTFILE="$XDG_STATE_HOME"/bash/history

shopt -s checkwinsize
shopt -s histappend
shopt -s autocd

PROMPT_COMMAND='prompt'

prompt() {
    history -a
    echo -e "\e[6 q"
}

# Colors
alias ls='ls --color=auto -h'
alias grep='grep --color=auto'
alias ip='ip -color=auto'
alias diff='diff --color=auto'
alias tree="tree -C"

# Use neovim if available
[ -x "$(command -v nvim)" ] && alias vim="nvim" vi="nvim"

alias chx="chmod +x"

# Higher verbosity for file operations
alias cp="cp -vi"
alias mkdir="mkdir -v"
alias mv="mv -vi"
alias rm="rm -vi"
alias trash="trash -v"
alias lf="lfcd"
alias t='trash'
alias rsync='rsync -avP'

if [ -x "$(command -v eza)" ]; then
    export EZA_COLORS="uu=0:gu=0"
    alias eza="eza --icons --group-directories-first"
    alias ls="eza"
    alias l="eza"
    alias ll="eza -l"
    alias la="eza -la"
    alias lt="eza -T -L 2"
    alias lt3="eza -T -L 3"
fi

alias zd='cd ~/Downloads'
alias ze='cd ~/Desktop'
alias zr='cd "$(git rev-parse --show-toplevel)"'
alias zk='z "$(tmux display-message -p "#S")"'
alias zf='eval "$(__fzf_cd__)"'

# Nix
alias nxb='~/Repos/dotfiles/nix/build'

# Laravel
alias sail="vendor/bin/sail"
alias artisan="de php artisan"
alias composer="de composer"
alias c="de composer"
alias cupd='de composer update'
alias s="sail"

alias pc='precommit'
alias dup='docker-compose up'
alias dst='docker-compose stop'

alias g="git"
alias gp="g pull"
alias gP="g push"
alias lg="lazygit"
alias ld="lazydocker"
alias glc="git log -1 --pretty=%B"

alias tg='toggl'

alias cmatrix='cmatrix -ab'
alias ff='fastfetch'
alias q='numbat'

alias tsr='tmux source-file ~/.config/tmux/tmux.conf'
alias ts='tmux split-window -h \; split-window -v'

# Dotfiles
alias dlg="(cd $HOME/Repos/dotfiles && lazygit)"
alias dsy="(cd $HOME/Repos/dotfiles && git pull && ./stow)"

[ "$(uname)" != 'Darwin' ] && alias cal='cal --monday'
[ "$(uname)" = 'Darwin' ] && alias cal='cal -A 2'

alias keepon="xset s off && xset -dpms"

alias vse="(cd $HOME/.local/share/scripts && vf)"
alias vaw="(cd $HOME/.config/awesome && vf)"
alias vsh="(cd $HOME/.config/shell && vf)"
alias vrc="(cd $HOME/Repos/dotfiles && vf)"

# Networking
alias pingg="ping google.com"
alias ipa="ip a"

alias sshvm='ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -A'

# Other
alias nj="jq . | nvim -Rc 'set syntax=json | set nospell' -"

alias tra="sat transactions:select"

alias reboot-windows='sudo grub-reboot "$(grep -i windows /boot/grub/grub.cfg|cut -d"'\''" -f2)" && reboot'
alias update-grub='sudo grub-mkconfig -o /boot/grub/grub.cfg'

# Functions

lfcd () {
    cd "$(command lf -print-last-dir "$@")" || return
}

zt() { 
    out=$(command zt "$@") && eval "$out"
}

li() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"

	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd" || return
	fi

	command rm -f -- "$tmp"
}

[ -x "$(command -v zoxide)" ] && eval "$(zoxide init bash)"
[ -x "$(command -v fzf)" ] && eval "$(fzf --bash)"
[ -x "$(command -v starship)" ] && eval "$(starship init bash)"
[ -x "$(command -v direnv)" ] && eval "$(direnv hook bash)"

# SSH agent
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent -t 24h > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi

if [[ ! -f "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
fi

[ -f "$XDG_STATE_HOME/.inhibit-suspend" ] && echo 'Info: Suspend is inhibited'

dchk
