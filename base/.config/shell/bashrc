#!/bin/bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

export HISTCONTROL=ignoreboth
export HISTSIZE=1000
export HISTFILESIZE=10000
export HISTFILE="$XDG_STATE_HOME"/bash/history

shopt -s checkwinsize
shopt -s histappend
shopt -s autocd

PROMPT_COMMAND='prompt'

prompt() {
    history -a
    echo -e "\e[6 q"
}

# Colors
alias ls='ls --color=auto -h'
alias grep='grep --color=auto'
alias ip='ip -color=auto'
alias diff='diff --color=auto'
alias tree="tree -C"

# Use neovim if available
[ -x "$(command -v nvim)" ] && alias vim="nvim" vi="nvim"

# Found myself making this typo, so I suppose it's more natural
alias chmox="chmod +x"

# Higher verbosity for file operations
alias cp="cp -vi"
alias mkdir="mkdir -v"
alias mv="mv -vi"
alias rm="rm -vi"
alias trash="trash -v"
alias lf="lfcd"
alias t='trash'

if [ -x "$(command -v eza)" ]; then
    export EZA_COLORS="uu=0:gu=0"
    alias eza="eza --icons --group-directories-first"
    alias ls="eza"
    alias l="eza"
    alias ll="eza -l"
    alias la="eza -la"
    alias lt="eza -T -L 2"
    alias lt3="eza -T -L 3"
fi

alias zd='cd ~/Downloads'
alias ze='cd ~/Desktop'
alias zr='cd "$(git rev-parse --show-toplevel)"'
alias zf='__fzf_cd__'

# Laravel
alias sail="vendor/bin/sail"
alias artisan="sail artisan"
alias c="sail composer"
alias s="sail"
alias a="de php artisan"
alias deploy="vendor/bin/envoy run deploy"

alias pc='tools/scripts/precommit'
alias dup='docker-compose up'
alias dst='docker-compose stop'

alias g="git"
alias gp="g pull"
alias gP="g push"
alias lg="lazygit"
alias ld="lazydocker"
alias glc="git log -1 --pretty=%B"

alias tg='toggl'

alias cu='checkupdates'
[ -x "$(command -v brew)" ] && alias cu='brew update && brew outdated'

alias cmatrix='cmatrix -ab'
alias ff='fastfetch'

alias tsr='tmux source-file ~/.config/tmux/tmux.conf'
alias ts='tmux split-window -h \; split-window -v'

# Clipboard
if [ "$(uname)" = "Darwin" ]; then
    alias xp='pbpaste' xc='pbcopy'
else
    alias xp='xclip -selection c -o' \
        xc='xclip -selection c -i'
fi

# Dotfiles
alias dlg="(cd $HOME/Repos/dotfiles && lazygit)"
alias dsy="(cd $HOME/Repos/dotfiles && git pull && ./stow)"

dss() {
    (cd "$HOME/Repos/dotfiles" \
        && git status \
        && git diff \
        && printf '%s' 'Message: ' \
        && read -r msg \
        && git add . \
        && git commit -m "${msg:=Update}" \
        && git pull && git push)
}

alias cal='cal --monday'
alias keepon="xset s off && xset -dpms"
alias vf='selected_file=$(fzf --preview "bat --color=always {}" --preview-window "~3"); [ -n "$selected_file" ] && vi "$selected_file"'

alias vse="(cd $HOME/.local/share/scripts && vf)"
alias vaw="(cd $HOME/.config/awesome && vf)"
alias vsh="(cd $HOME/.config/shell && vf)"
alias vrc="(cd $HOME/Repos/dotfiles && vf)"

# Networking
alias pingg="ping google.com"
alias ipa="ip a"

alias sc='systemctl'
alias scu='systemctl --user'
alias jc='journalctl'
alias jcu='journalctl --user'

# AP
alias ap-hostapd-edit="sudoedit /etc/hostapd/hostapd.conf"
alias ap-hostapd-restart="sudo systemctl restart hostapd"
alias ap-hostapd-logs="sudo journalctl -u hostapd"
alias ap-accept-edit="sudoedit /etc/hostapd/hostapd.accept"

alias ap-dnsmasq-edit="sudoedit /etc/dnsmasq.conf"
alias ap-dnsmasq-check="sudo dnsmasq --test"
alias ap-dnsmasq-restart="sudo systemctl restart dnsmasq"
alias ap-dnsmasq-logs="sudo journalctl -u dnsmasq"

alias ap-etc-hosts-edit="sudoedit /etc/hosts"

alias ap-leases-list="sudo cat /var/lib/dnsmasq/dnsmasq.leases"
alias ap-leases-clear="sudo rm /var/lib/dnsmasq/dnsmasq.leases"

# Other
alias nj="jq . | nvim -Rc 'set syntax=json | set nospell'"
alias wt="meteo"

alias tra="sat transactions:select"

alias reboot-windows='sudo grub-reboot "$(grep -i windows /boot/grub/grub.cfg|cut -d"'\''" -f2)"'

# Functions
# Get time when system was woken from sleep
wok() {
    journalctl -n1 -u sleep.target | awk '{print $3}'
}

dt() {
    if [ $# -eq 0 ]; then
        du -hs .
    else
        du -hs "$@"
    fi
}

n() {
    if [ $# -eq 0 ]; then
        vi .
    else
        vi "$@"
    fi
}

lfcd () {
    cd "$(command lf -print-last-dir "$@")" || return
}

li() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"

	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd" || return
	fi

	command rm -f -- "$tmp"
}

loop() {
    while true; do read; $@; done
}

glz() {
    glc && read -r && git commit -m "$(glc)" && git push
}

brew-backup() {
    out="$HOME/.local/brew-backups/$(date +%Y%m%d)"
    rsync -a "$HOMEBREW_PREFIX/" "$out"
    du -hs "$out"
}

[ -x "$(command -v zoxide)" ] && eval "$(zoxide init bash)"
[ -x "$(command -v fzf)" ] && eval "$(fzf --bash)"
[ -x "$(command -v starship)" ] && eval "$(starship init bash)"
[ -x "$(command -v direnv)" ] && eval "$(direnv hook bash)"

# SSH agent
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent -t 24h > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi

if [[ ! -f "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
fi
