#!/bin/bash

# Access bookmarks and open a browser tab with an optional parameter

state="$XDG_STATE_HOME/bm"
mkdir -p "$state"
touch "$state/history"

list="$XDG_CONFIG_HOME/bm/list"
list_local="$XDG_CONFIG_HOME/bm/list.local"
search_cmd='fzf -i'

items=$(cat "$list" "$list_local" 2> /dev/null | grep -v '^\(#\|$\)')

for p in "$@"
do
    # Editing bookmarks lists
    [ "$p" = '-e' ] && nvim "$list" && exit 0
    [ "$p" = '-el' ] && nvim "$list_local" && exit 0

    # Listing all bookmarks
    [ "$p" = '-l' ] && echo "$items" && exit 0

    [ "$p" = '--rofi' ] && search_cmd='rofi -dmenu'
done

# Use fzf to select one of the URLs
url=$(printf '%s\n' "${items[@]}" | $search_cmd)

# If selection was canceled then exit
[ ! "$url" ] && exit 1

# Extract the text inside the curly braces {}
placeholder=$(echo "$url" | grep '{}')

if [ "$placeholder" ]; then
    # Prompt the user for input to replace the placeholder
    if [[ "$search_cmd" == *'fzf'* ]]; then
        input=$(uniq < "$state/history" | fzf -i --print-query --bind tab:replace-query)
    else
        input=$(uniq < "$state/history" | $search_cmd -p "> ")
    fi

    [ ! "$input" ] && exit 1

    echo "$input" | grep -v '^$' >> "$state/history"

    # Replace the placeholder with the user input
    url="${url//\{\}/$input}"
fi

open_cmd='xdg-open'

[ "$(uname)" = "Darwin" ] && open_cmd='open'

"$open_cmd" "https://$url"
